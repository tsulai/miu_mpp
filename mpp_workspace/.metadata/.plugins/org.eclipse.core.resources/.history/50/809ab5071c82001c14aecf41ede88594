package prog1;

import java.time.LocalDate;
import java.util.List;

public class Orderline {
	private int quantity;//this is orderline quantity e.g. 5 items(products) in one shipped orderline
	private double price;
	private String status;
	private LocalDate shipDate;
	private double points;
	private Order order;
	private List<Product> productList;
	//assumption: according to class diagram, orderline can have n products, but qty of product not included in consideration
	//here we assume one product is only 1 product qty.
	//qty of the product is the number of same product that included in productList
	
	public Orderline(int quantity, double price, String status, LocalDate shipDate, double points, Order order,
			List<Product> productList) {
		super();
		this.quantity = quantity;
		this.price = price;
		this.status = status;
		this.shipDate = shipDate;
		this.points = points;
		this.order = order;
		this.productList = productList;
	}
	
	
	public int getQuantity() {
		return quantity;
	}


	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}


	public double getPrice() {
		return price;
	}


	public void setPrice(double price) {
		this.price = price;
	}


	public String getStatus() {
		return status;
	}


	public void setStatus(String status) {
		this.status = status;
	}


	public LocalDate getShipDate() {
		return shipDate;
	}


	public void setShipDate(LocalDate shipDate) {
		this.shipDate = shipDate;
	}


	public double getPoints() {
		return points;
	}


	public void setPoints(double points) {
		this.points = points;
	}


	public Order getOrder() {
		return order;
	}


	public void setOrder(Order order) {
		this.order = order;
	}


	public List<Product> getProductList() {
		return productList;
	}


	public void setProductList(List<Product> productList) {
		this.productList = productList;
	}


	public double computePrice() {
		return productList.stream()
			.mapToDouble(Product::getPrice).sum();		
	}
	
	public double computePoints() {
		
		return 0.0;
	}
}
