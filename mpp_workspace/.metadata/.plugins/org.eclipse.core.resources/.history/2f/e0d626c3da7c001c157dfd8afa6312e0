package level2;


import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Insets;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.Border;

public class JFrameUpdate extends JFrame implements ActionListener {

	JButton btnSubmit;
	JButton btnClose;
	JTextField txtStudentID;
	JTextField txtGPA;
	JTextField txtCity;
	JTextField txtState;
	JTextField txtZip;
	int lblWidthMin = 180;
	int lblHeight = 25;
	
	JFrameUpdate(){
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setTitle("Update Student GPA");
		this.setSize(620,500);
		centerFrameOnDesktop(this);
		//this.setResizable(false);
		this.setLayout(new BorderLayout());
		this.setVisible(true);	
		//Border border = BorderFactory.createLineBorder(Color.green, 3);		
		
		JLabel lblStudentID = new JLabel();
		lblStudentID.setText("Enter Student ID");		
		lblStudentID.setPreferredSize(new Dimension(lblWidthMin, lblHeight));	
		
		JLabel lblGPA = new JLabel();
		lblGPA.setText("Enter New GPA");
		lblGPA.setPreferredSize(new Dimension(lblWidthMin, lblHeight));

		
		txtStudentID = new JTextField();
		txtStudentID.setPreferredSize(new Dimension(lblWidthMin, lblHeight));
		
		txtGPA = new JTextField();
		txtGPA.setPreferredSize(new Dimension(lblWidthMin, lblHeight));
		
		
		btnSubmit = new JButton("Submit");
		btnSubmit.addActionListener(evt -> {
			 String id, name, age, gpa;
			    
				// load data from the database!!
			    double totalGPA = 0.0; int count = 0;
		        dbconnection dbconnect = new dbconnection();
		        dbconnect.Connect();
		        ResultSet rs;
		        rs=dbconnect.DoQuery("Select * from StudentInfo");
				
				try {
				  while (rs.next()) {
						id = rs.getString(txtStudentID.getText());
						name = rs.getString("StudentName");
						age = rs.getString("Age");
						gpa = rs.getString("GPA");
		                //level 1
						totalGPA += Double.parseDouble(gpa);
						count++;
		                System.out.println("Student ID is " + id + "   Student Name is " + name + ", age is " + age + ", GPA is " + gpa);
		                
				    }
				  System.out.println("Average GPA of all Student is " + totalGPA/count);
				  
				} catch (SQLException ex) {
					System.err.println("error in database connection");
				}

				dbconnect.Close();  //close database connection
		});	
		
		btnClose = new JButton("Close");
		btnClose.addActionListener(evt -> {
			this.dispose();
		});
		
		JPanel northPanel = new JPanel();
		northPanel.setPreferredSize(new Dimension(500, 50));
		northPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 10,0));
		
		JPanel centerPanel = new JPanel();
		centerPanel.setPreferredSize(new Dimension(300, 50));
		centerPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 10,0));
		centerPanel.setBorder(BorderFactory.createLineBorder(Color.yellow, 0));
		
		JPanel westPanel = new JPanel();
		westPanel.setPreferredSize(new Dimension(100, 50));
		westPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 10,0));
		westPanel.setBorder(BorderFactory.createLineBorder(Color.red, 0));
		
		JPanel eastPanel = new JPanel();
		eastPanel.setPreferredSize(new Dimension(100, 50));
		eastPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 10,0));
		eastPanel.setBorder(BorderFactory.createLineBorder(Color.red, 0));
		
		JPanel southPanel = new JPanel();
		southPanel.setPreferredSize(new Dimension(100, 80));
		southPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 10,20));
		southPanel.setBorder(BorderFactory.createLineBorder(Color.red, 0));
		
		northPanel.add(lblStudentID);
		northPanel.add(lblGPA);
		//northPanel.add(lblCity);		
		northPanel.add(txtStudentID);
		northPanel.add(txtGPA);
		//northPanel.add(txtCity);
		//centerPanel.add(lblState);
		//centerPanel.add(lblZip);
		//centerPanel.add(txtState);	
		//centerPanel.add(txtZip);
		southPanel.add(btnSubmit);
		southPanel.add(btnClose);
		
		this.add(northPanel,BorderLayout.NORTH);
		this.add(centerPanel,BorderLayout.CENTER);
		this.add(eastPanel, BorderLayout.EAST);
		this.add(westPanel,BorderLayout.WEST);
		this.add(southPanel,BorderLayout.SOUTH);		
		//
		this.pack();
		
	}

	
	public static void centerFrameOnDesktop(Component f) {
		Toolkit toolkit = Toolkit.getDefaultToolkit();
		int height = toolkit.getScreenSize().height;
		int width = toolkit.getScreenSize().width;
		int frameHeight = f.getSize().height;
		int frameWidth = f.getSize().width;
		int xpos = (width - frameWidth) / 2;
		int ypos = (height - frameHeight) / 3;
		f.setLocation(xpos, ypos);
	}

	public static void main(String[] args) {
		
		JFrameUpdate form1 = new JFrameUpdate();
		
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		System.out.println("hi");
	}
}
