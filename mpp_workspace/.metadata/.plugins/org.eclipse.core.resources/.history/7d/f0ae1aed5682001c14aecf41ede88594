package prog1;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

public class Main {

	public static void main(String[] args) {
		
		ACustomer john = new CorporateCust("John", "1000 N 4th St, Fairfield IA 52557", "641-819-2000", 25,50.00);
		ACustomer mary = new PersonalCust("Mary", "5 St.Micheal Ave, Brooklyn NY 72597", "641-819-2002", 25,"1234567890123456");
		
		Product shirt = new Product("T Shirt", "00001", 45.00, new OtherPoints());
		Product laptop = new Product("Dell Laptop", "00002", 2180.00, new ComputerPoints());
		Product hdd = new Product("External HDD", "00003", 89.90, new ComputerPoints());
		Product vitD = new Product("Vitamin D", "00004", 65.00, new HealthPoints());
		Product tvSamsung = new Product("Samsung TV", "00005", 899.00, new AudioVideoPoints());
		Product wheelchair = new Product("Wheel Chair", "00006", 569.90, new HealthPoints());
		Product speaker = new Product("Speaker", "00007", 150.00, new AudioVideoPoints());
		Product boots = new Product("Rain Boots", "00008", 99.00, new OtherPoints());
		
		List<Product> jProdList1 = Arrays.asList(vitD, shirt);
		List<Product> jProdList2 = Arrays.asList(laptop);		
		
		Order jOrder1 = new Order("000-000-123", LocalDate.of(2021, 10, 10), "Processing", john);
		Orderline jOrder1line1 = new Orderline("shipped", LocalDate.of(2021, 10, 20), jOrder1, jProdList1);
		Orderline jOrder1line2 = new Orderline("shipped", LocalDate.of(2021, 10, 25), jOrder1, jProdList2);
		
		jOrder1.addOrderLine(jOrder1line1);
		jOrder1.addOrderLine(jOrder1line2);
		
		//accumulate points from current order
		jOrder1.setCustomerPoints(jOrder1.getOrderPoints());
		
		john.addOrder(jOrder1);
		
		print();
		
		System.out.println("=================================");
		((CorporateCust)john).generateMonthlyBill(10,2021);
		
		System.out.println("=================================");
		
		List<Product> mProdList1 = Arrays.asList(tvSamsung);
		List<Product> mProdList2 = Arrays.asList(wheelchair);
		List<Product> mProdList3 = Arrays.asList(boots, speaker);
		
		Order mOrder1 = new Order("000-000-123", LocalDate.of(2021, 12, 10), "Shipped", mary);
		Orderline mOrder1line1 = new Orderline("Delivered", LocalDate.of(2021, 12, 12), mOrder1, mProdList1);
		Orderline mOrder1line2 = new Orderline("Delivered", LocalDate.of(2021, 12, 13), mOrder1, mProdList2);
		Orderline mOrder1line3 = new Orderline("Delivered", LocalDate.of(2021, 10, 14), mOrder1, mProdList3);
		
		mOrder1.addOrderLine(mOrder1line1);
		mOrder1.addOrderLine(mOrder1line2);
		mOrder1.addOrderLine(mOrder1line3);
		
		//accumulate points from current order
		mOrder1.setCustomerPoints(mOrder1.getOrderPoints());
		mary.addOrder(mOrder1);
		
	}
	public void printOrder(Order ord) {
		System.out.println(ord.toString());
		for( Orderline l : ord.getOrderLineList()) {
			System.out.print(l.toString());
			int count = 1;
			for(Product p : l.getProductList()) {
				System.out.print(count + ". " + p.toString());
				count++;
			}
		}
	}

}
