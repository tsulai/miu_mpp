package level2_no5_redo_school_lab2_level1;

import java.util.ArrayList;
import java.util.List;

public class Department {

	private String name;
	private List<Person> persons;//0 to many relationship 	
	
	Department(String name){
		this.name = name;
		persons= new ArrayList<Person>();
	}
	public double getTotalSalary() {
		//double sumSalary = 0.0;
		//----------------
		// lambda & stream
		//----------------
		//computes the sum of all the salaries (per month) paid to faculty and staff.
		return persons.stream()
			.mapToDouble(Person::getSalary)
			.sum();		
		
//		for(Person p : persons) {
//			//if(p instanceof Faculty || p instanceof Staff) {//no condition requied as student doesn't have getSalary()
//				sumSalary += p.getSalary();
//			//}
//		}
//		return sumSalary;
	}
	public void showAllMembers() {		
		//lambda
		//persons.forEach(person -> System.out.println(person.name + "," + person.phone + "," + person.age + "," + person.getClass().getSimpleName()));
		
		//instanceof
		for(Person person: persons) {
			System.out.println(person.name + "," + person.phone + "," + person.age + "," + person.getClass().getSimpleName());
		}
		
	}
	public void unitsPerFaculty() {
		//shows a list of all faculty names and the total number of units they teach.  
		//For unitsPerFaculty()  do it two different ways.  One is use  instanceOf, and the other is use   getClass().getSimpleName()
		//lamda
//		persons.forEach(person -> {
//			if(person.getClass().getSimpleName().equals("Faculty")) {
//				System.out.println(person.name + " : " + ((Faculty)person).getTotalUnits());
//			}
//		});	
		//instanceof 
		for(Person p: persons) {
			if(p instanceof Faculty) {
				System.out.println(p.name + " : " + ((Faculty)p).getTotalUnits());
			}
		}
	}	
	void addPerson(Person p) {
		persons.add(p);
	}
}
